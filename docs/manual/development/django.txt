———————————————————————————————————————————————————————————
SETUP WEB-APPLICATION USING PYTHON3 USING DJANGO FRAMEWORK.
———————————————————————————————————————————————————————————
By: Bartlomiej Mika
Date: April, 28th, 2015



**************************
* PROJECT INITIALIZATION *
**************************
Q) How do we setup a project project titled: “py-ecantina”
A) How to create a project from scratch. (Note: This is only done by Bart)


(1)
$ cd ~/Developer/comicscantina
$ mkdir py-ecantina
$ cd py-ecantina


(2)
Setup our environment:

(OSX)
$ python3 -m venv env

(Linux/FreeBSD)
$ virtualenv env


(3) okay , Now lets activate virtualenv
$ source env/bin/activate


(4) Confirm we are using Python3
$ python --version  # Should return Python 3.x


(5) OSX USERS ONLY:
(a) Check what Postgres.app version you are using.
(b) For Postgres we need the following $PATH, so just type it in.
$ export PATH="/Applications/Postgres.app/Contents/Versions/9.4/bin:$PATH"


(6) Now finally lets install djnago
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
pip3 install django                 # Our MVC Framework
pip3 install psycopg2               # Postgres SQL DB
pip3 install gunicorn               # Web-Server Helper
pip3 install Pillow                 # Req: ImageField
pip3 install django-simple-captcha  # Captchas
pip3 install pep8                   # Coding Style Checker
pip3 install urllib3                # Library for making HTTP requests to external websites
pip3 install beautifulsoup4         # HTML Scrapper
pip3 install simplejson             # JSON Reader
pip3 install djangorestframework    # Web browsable API Framework
pip3 install markdown               # Markdown support for the browsable API.
pip3 install django-filter          # Filtering support
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


(7) After installation
$ python -c "import django; print(django.get_version())" # 1.8


(8) Now django installed and ready to use , okay lets create a sample site
$ django-admin.py startproject ecantina_project


(9) Now change directory to my site
$ cd ecantina_project
$ python manage.py runserver


(10) Now go to your browser and enter:  http://localhost:8000
You should see a site. Exit web server when finished.


(10) Lets get our Postgres.app setup, follow the instructions in the file
"postgres.txt" to have our database setup, then do this:

Update your database settings to use your Postgres SQL DB.
- - - - - - - - - - - - - - - - - - - - - - - - - -
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "ecantina_db",
        "USER": "django",
        "PASSWORD": "123password",
        "HOST": "localhost",
        "PORT": "5432",
    }
}
- - - - - - - - - - - - - - - - - - - - - - - - - -


(10) Create the application(s).
python manage.py startapp inventory
python manage.py startapp inventory_add_product
python manage.py startapp inventory_checkout
python manage.py startapp inventory_help
python manage.py startapp inventory_customer
python manage.py startapp inventory_products
python manage.py startapp inventory_print_label
python manage.py startapp inventory_dashboard
python manage.py startapp inventory_setting
python manage.py startapp etl
python manage.py startapp store
python manage.py startapp register
python manage.py startapp login
python manage.py startapp api

(11) Then go to ecantina_project/settings.py and make sure to include ‘webapp’ in the file.
- - - - - - - - - - - - - - - - - - - - - - - - - -
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'rest_framework',
    'captcha',
    'inventory', # Deprecated
    'inventory_add_product',
    'inventory_checkout',
    'inventory_help',
    'inventory_customer',
    'inventory_print_label',
    'inventory_dashboard',
    'inventory_setting',
    'etl',
    'store',
    'register',
    'login',
    'api','
)
- - - - - - - - - - - - - - - - - - - - - - - - - -


(12) Also don't forget to add the following to that file.
- - - - - - - - - - - - - - - - - - - - - - - - - -
# 'Sites Framework' requires this line.
SITE_ID = 1
- - - - - - - - - - - - - - - - - - - - - - - - - -


(13) Now go to ecantina_project/urls.py and make sure to include the following:
- - - - - - - - - - - - - - - - - - - - - - - - - -
url(r'^admin/', include(admin.site.urls)),
url(r'', include('inventory.urls')),
url(r'', include('store.urls')),
url(r'', include('register.urls')),
url(r'', include('login.urls')),
url(r'', include('webservice.urls')),
url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework'))
- - - - - - - - - - - - - - - - - - - - - - - - - -


(13) Finally, create a file called ‘requirements.txt’ and add all the libraries this project will use. Make sure this file is located in the root of the project. Run this code.
$ pip freeze > requirements.txt


(14) Submit this code to git. We now have the project setup. See “git.txt”.



*****************
* PROJECT SETUP *
*****************
Q) Now that we have a project, how do we access it and set it up locally on the computer?
A) Follow these steps:


1) Clone from git:
$ cd ~/Developer
$ git clone some_url (See "git.txt").


2) Go into the directory
$ cd py-ecantina


3) Setup our virtual environment
$ python3 -m venv env


(5) okay , Now lets activate virtualenv
$ source env/bin/activate


(6) OSX USERS ONLY:
(a) Check what Postgres.app version you are using.
(b) For Postgres we need the following $PATH, so just type it in.
$ export PATH="/Applications/Postgres.app/Contents/Versions/9.4/bin:$PATH"


(7) Now lets install the libraries this project depends on.
$ pip3 install -r requirements.txt


(8) Lets load up our apps data
(a) Create our store.
$ python manage.py setup_ecantina


(b) Import comic book data.
(See gcd.txt)


**********
* SOURCE *
**********
1) https://www.computersnyou.com/2960/setup-django-virtualenv-macosx-mavericks/
2) http://stackoverflow.com/questions/20251562/how-to-install-django-for-python-3-3
3) http://hackercodex.com/guide/python-development-environment-on-mac-osx/
4) http://stackoverflow.com/questions/12410113/migrating-virtualenv-and-github-between-computers