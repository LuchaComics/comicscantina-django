# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.core.validators
from django.conf import settings
import datetime


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('brand_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=127, db_index=True)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ec_brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(serialize=False, primary_key=True)),
                ('parent_id', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=127)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ec_categories',
            },
        ),
        migrations.CreateModel(
            name='Comic',
            fields=[
                ('comic_id', models.AutoField(serialize=False, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_cgc_rated', models.BooleanField(default=False)),
                ('age', models.PositiveSmallIntegerField(choices=[(1, 'Gold'), (2, 'Silver'), (3, 'Bronze'), (4, 'Copper')], blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], null=True)),
                ('cgc_rating', models.FloatField(choices=[(10.0, 'Gem Mint'), (9.9, 'Mint'), (9.8, 'Near Mint/Mint'), (9.6, 'Near Mint +'), (9.4, 'Near Mint'), (9.2, 'Near Mint -'), (9.0, 'Very Fine/Near Mint'), (8.5, 'Very Fine +'), (8.0, 'Very Fine'), (7.5, 'Very Fine -'), (7.0, 'Fine/Very Fine'), (6.5, 'Fine +'), (6.0, 'Fine'), (5.5, 'Fine -'), (5.0, 'Very Good/Fine'), (4.5, 'Very Good +'), (4.0, 'Very Good'), (3.5, 'Very Good -'), (3.0, 'Good/Very Good'), (2.5, 'Good +'), (2.0, 'Good'), (1.8, 'Good -'), (1.5, 'Fair/Good'), (1.0, 'Fair'), (0.5, 'Poor')], blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], null=True)),
                ('label_colour', models.CharField(choices=[('Purple', 'Purple'), ('Red', 'Red'), ('Blue', 'Blue'), ('Yellow', 'Yellow')], blank=True, max_length=63, null=True)),
                ('condition_rating', models.PositiveSmallIntegerField(choices=[(10, 'Near Mint'), (8, 'Very Fine'), (6, 'Fine'), (4, 'Very Good'), (2, 'Good'), (1, 'Fair'), (0, 'Poor')], blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], null=True)),
                ('is_canadian_priced_variant', models.BooleanField(default=False)),
                ('is_variant_cover', models.BooleanField(default=False)),
                ('is_retail_incentive_variant', models.BooleanField(default=False)),
                ('is_newsstand_edition', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('issue',),
                'db_table': 'ec_comics',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(serialize=False, primary_key=True)),
                ('joined', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_suspended', models.BooleanField(default=False)),
                ('is_tos_signed', models.BooleanField(default=False)),
                ('wants_newsletter', models.BooleanField(default=False)),
                ('wants_flyers', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_key', models.CharField(max_length=63, default='', blank=True)),
                ('first_name', models.CharField(max_length=63, db_index=True)),
                ('last_name', models.CharField(max_length=63, db_index=True)),
                ('email', models.EmailField(null=True, blank=True, unique=True, db_index=True, max_length=254)),
                ('date_of_birth', models.DateField(default=datetime.datetime.now)),
                ('billing_phone', models.CharField(blank=True, max_length=10, db_index=True, null=True)),
                ('billing_street_name', models.CharField(max_length=63)),
                ('billing_street_number', models.CharField(max_length=15)),
                ('billing_unit_number', models.CharField(blank=True, max_length=15, null=True)),
                ('billing_city', models.CharField(max_length=63)),
                ('billing_province', models.CharField(choices=[('Alberta', 'Alberta'), ('British Columbia', 'British Columbia'), ('Manitoba', 'Manitoba'), ('New Brunswick', 'New Brunswick'), ('Newfoundland and Labrador', 'Newfoundland and Labrador'), ('Nova Scotia', 'Nova Scotia'), ('Ontario', 'Ontario'), ('Prince Edward Island', 'Prince Edward Island'), ('Quebec', 'Quebec'), ('Saskatchewan', 'Saskatchewan'), ('Northwest Territories', 'Northwest Territories'), ('Nunavut', 'Nunavut'), ('Yukon', 'Yukon'), ('Alabama', 'Alabama'), ('Alaska', 'Alaska'), ('Arizona', 'Arizona'), ('Arkansas', 'Arkansas'), ('California', 'California'), ('Colorado', 'Colorado'), ('Connecticut', 'Connecticut'), ('Delaware', 'Delaware'), ('Florida', 'Florida'), ('Georgia', 'Georgia'), ('Hawaii', 'Hawaii'), ('Idaho', 'Idaho'), ('Illinois', 'Illinois'), ('Indiana', 'Indiana'), ('Iowa', 'Iowa'), ('Kansas', 'Kansas'), ('Kentucky', 'Kentucky'), ('Louisiana', 'Louisiana'), ('Maine', 'Maine'), ('Maryland', 'Maryland'), ('Massachusetts', 'Massachusetts'), ('Michigan', 'Michigan'), ('Minnesota', 'Minnesota'), ('Mississippi', 'Mississippi'), ('Missouri', 'Missouri'), ('Montana', 'Montana'), ('Nebraska', 'Nebraska'), ('Nevada', 'Nevada'), ('New Hampshire', 'New Hampshire'), ('New Jersey', 'New Jersey'), ('New Mexico', 'New Mexico'), ('New York', 'New York'), ('North Carolina', 'North Carolina'), ('North Dakota', 'North Dakota'), ('Ohio', 'Ohio'), ('Oklahoma', 'Oklahoma'), ('Oregon', 'Oregon'), ('Pennsylvania', 'Pennsylvania'), ('Rhode Island', 'Rhode Island'), ('South Carolina', 'South Carolina'), ('South Dakota', 'South Dakota'), ('Tennessee', 'Tennessee'), ('Texas', 'Texas'), ('Utah', 'Utah'), ('Vermont', 'Vermont'), ('Virginia', 'Virginia'), ('Washington', 'Washington'), ('West Virginia', 'West Virginia'), ('Wisconsin', 'Wisconsin'), ('Wyoming', 'Wyoming'), ('Other', 'Other')], max_length=63)),
                ('billing_country', models.CharField(choices=[('Canada', 'Canada'), ('United States', 'United States'), ('Mexico', 'Mexico'), ('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas, The', 'Bahamas, The'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burma', 'Burma'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo, Democratic Republic of the', 'Congo, Democratic Republic of the'), ('Congo, Republic of the', 'Congo, Republic of the'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('Gambia, The', 'Gambia, The'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Holy See', 'Holy See'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea, North', 'Korea, North'), ('Korea, South', 'Korea, South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('Netherlands Antilles', 'Netherlands Antilles'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('North Korea', 'North Korea'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palestinian Territories', 'Palestinian Territories'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Korea', 'South Korea'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Timor-Leste', 'Timor-Leste'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('Other', 'Other')], max_length=63)),
                ('billing_postal', models.CharField(max_length=31, db_index=True)),
                ('is_shipping_same_as_billing', models.BooleanField(default=False)),
                ('shipping_phone', models.CharField(blank=True, max_length=10, db_index=True, null=True)),
                ('shipping_street_name', models.CharField(max_length=63)),
                ('shipping_street_number', models.CharField(max_length=15)),
                ('shipping_unit_number', models.CharField(blank=True, max_length=15, null=True)),
                ('shipping_city', models.CharField(max_length=63)),
                ('shipping_province', models.CharField(choices=[('Alberta', 'Alberta'), ('British Columbia', 'British Columbia'), ('Manitoba', 'Manitoba'), ('New Brunswick', 'New Brunswick'), ('Newfoundland and Labrador', 'Newfoundland and Labrador'), ('Nova Scotia', 'Nova Scotia'), ('Ontario', 'Ontario'), ('Prince Edward Island', 'Prince Edward Island'), ('Quebec', 'Quebec'), ('Saskatchewan', 'Saskatchewan'), ('Northwest Territories', 'Northwest Territories'), ('Nunavut', 'Nunavut'), ('Yukon', 'Yukon'), ('Alabama', 'Alabama'), ('Alaska', 'Alaska'), ('Arizona', 'Arizona'), ('Arkansas', 'Arkansas'), ('California', 'California'), ('Colorado', 'Colorado'), ('Connecticut', 'Connecticut'), ('Delaware', 'Delaware'), ('Florida', 'Florida'), ('Georgia', 'Georgia'), ('Hawaii', 'Hawaii'), ('Idaho', 'Idaho'), ('Illinois', 'Illinois'), ('Indiana', 'Indiana'), ('Iowa', 'Iowa'), ('Kansas', 'Kansas'), ('Kentucky', 'Kentucky'), ('Louisiana', 'Louisiana'), ('Maine', 'Maine'), ('Maryland', 'Maryland'), ('Massachusetts', 'Massachusetts'), ('Michigan', 'Michigan'), ('Minnesota', 'Minnesota'), ('Mississippi', 'Mississippi'), ('Missouri', 'Missouri'), ('Montana', 'Montana'), ('Nebraska', 'Nebraska'), ('Nevada', 'Nevada'), ('New Hampshire', 'New Hampshire'), ('New Jersey', 'New Jersey'), ('New Mexico', 'New Mexico'), ('New York', 'New York'), ('North Carolina', 'North Carolina'), ('North Dakota', 'North Dakota'), ('Ohio', 'Ohio'), ('Oklahoma', 'Oklahoma'), ('Oregon', 'Oregon'), ('Pennsylvania', 'Pennsylvania'), ('Rhode Island', 'Rhode Island'), ('South Carolina', 'South Carolina'), ('South Dakota', 'South Dakota'), ('Tennessee', 'Tennessee'), ('Texas', 'Texas'), ('Utah', 'Utah'), ('Vermont', 'Vermont'), ('Virginia', 'Virginia'), ('Washington', 'Washington'), ('West Virginia', 'West Virginia'), ('Wisconsin', 'Wisconsin'), ('Wyoming', 'Wyoming'), ('Other', 'Other')], max_length=63)),
                ('shipping_country', models.CharField(choices=[('Canada', 'Canada'), ('United States', 'United States'), ('Mexico', 'Mexico'), ('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas, The', 'Bahamas, The'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burma', 'Burma'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo, Democratic Republic of the', 'Congo, Democratic Republic of the'), ('Congo, Republic of the', 'Congo, Republic of the'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('Gambia, The', 'Gambia, The'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Holy See', 'Holy See'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea, North', 'Korea, North'), ('Korea, South', 'Korea, South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('Netherlands Antilles', 'Netherlands Antilles'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('North Korea', 'North Korea'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palestinian Territories', 'Palestinian Territories'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Korea', 'South Korea'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Timor-Leste', 'Timor-Leste'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('Other', 'Other')], max_length=63)),
                ('shipping_postal', models.CharField(max_length=31, db_index=True)),
                ('has_consented', models.BooleanField(default=False)),
                ('qrcode', models.ImageField(blank=True, upload_to='qrcode', null=True)),
            ],
            options={
                'ordering': ('last_name', 'first_name'),
                'db_table': 'ec_customers',
            },
        ),
        migrations.CreateModel(
            name='EmailSubscription',
            fields=[
                ('subscription_id', models.AutoField(serialize=False, primary_key=True)),
                ('email', models.EmailField(unique=True, db_index=True, max_length=254)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('submission_date',),
                'db_table': 'ec_email_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.AutoField(serialize=False, primary_key=True)),
                ('role', models.PositiveSmallIntegerField(choices=[(0, 'Owner'), (1, 'Manager'), (2, 'Worker')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)], default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_key', models.CharField(max_length=63, default='', blank=True)),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_suspended', models.BooleanField(default=False)),
                ('is_tos_signed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('employee_id',),
                'db_table': 'ec_employees',
            },
        ),
        migrations.CreateModel(
            name='GCDBrand',
            fields=[
                ('brand_id', models.AutoField(serialize=False, primary_key=True)),
                ('issue_count', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('year_began', models.IntegerField(db_index=True, null=True)),
                ('year_ended', models.IntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True)),
                ('year_ended_uncertain', models.BooleanField(db_index=True)),
                ('notes', models.TextField()),
                ('keywords', models.TextField(null=True)),
                ('url', models.URLField(max_length=255, default='', blank=True)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'gcd_brands',
            },
        ),
        migrations.CreateModel(
            name='GCDBrandEmblemGroup',
            fields=[
                ('brand_emblem_group_id', models.AutoField(serialize=False, primary_key=True)),
                ('brand', models.ForeignKey(to='api.GCDBrand', null=True)),
            ],
            options={
                'ordering': ('brand',),
                'db_table': 'gcd_brand_emblem_groups',
            },
        ),
        migrations.CreateModel(
            name='GCDBrandGroup',
            fields=[
                ('brand_group_id', models.AutoField(serialize=False, primary_key=True)),
                ('issue_count', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('year_began', models.IntegerField(db_index=True, null=True)),
                ('year_ended', models.IntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True)),
                ('year_ended_uncertain', models.BooleanField(db_index=True)),
                ('notes', models.TextField()),
                ('keywords', models.TextField(null=True)),
                ('url', models.URLField(max_length=255, default='', blank=True)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'gcd_brand_groups',
            },
        ),
        migrations.CreateModel(
            name='GCDBrandUse',
            fields=[
                ('brand_use_id', models.AutoField(serialize=False, primary_key=True)),
                ('year_began', models.IntegerField(db_index=True, null=True)),
                ('year_ended', models.IntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True)),
                ('year_ended_uncertain', models.BooleanField(db_index=True)),
                ('notes', models.TextField()),
                ('reserved', models.BooleanField(db_index=True, default=0)),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
                ('emblem', models.ForeignKey(related_name='in_use', to='api.GCDBrand')),
            ],
            options={
                'ordering': ('publisher',),
                'db_table': 'gcd_brand_uses',
            },
        ),
        migrations.CreateModel(
            name='GCDCountry',
            fields=[
                ('country_id', models.AutoField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=10)),
                ('name', models.CharField(max_length=255, db_index=True)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'gcd_countries',
            },
        ),
        migrations.CreateModel(
            name='GCDImage',
            fields=[
                ('image_id', models.AutoField(serialize=False, primary_key=True)),
                ('type', models.CharField(max_length=255, db_index=True)),
                ('file', models.FileField(upload_to='uploads', null=True)),
            ],
            options={
                'db_table': 'gcd_images',
            },
        ),
        migrations.CreateModel(
            name='GCDIndiciaPublisher',
            fields=[
                ('indicia_publisher_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('year_began', models.PositiveSmallIntegerField(db_index=True, null=True)),
                ('year_ended', models.PositiveSmallIntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True, default=False)),
                ('year_ended_uncertain', models.BooleanField(db_index=True, default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=255, default='', null=True)),
                ('is_surrogate', models.BooleanField(db_index=True)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('imprint_count', models.IntegerField(default=0)),
                ('brand_count', models.IntegerField(db_index=True, default=0)),
                ('indicia_publisher_count', models.IntegerField(db_index=True, default=0)),
                ('series_count', models.IntegerField(default=0)),
                ('issue_count', models.IntegerField(default=0)),
                ('country', models.ForeignKey(to='api.GCDCountry')),
                ('images', models.ManyToManyField(to='api.GCDImage', blank=True)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'gcd_indicia_publishers',
            },
        ),
        migrations.CreateModel(
            name='GCDIssue',
            fields=[
                ('issue_id', models.AutoField(serialize=False, primary_key=True)),
                ('number', models.CharField(max_length=50, db_index=True)),
                ('title', models.CharField(max_length=255, db_index=True)),
                ('no_title', models.BooleanField(db_index=True, default=False)),
                ('volume', models.CharField(max_length=50, db_index=True)),
                ('no_volume', models.BooleanField(db_index=True, default=False)),
                ('display_volume_with_number', models.BooleanField(db_index=True, default=False)),
                ('isbn', models.CharField(max_length=32, db_index=True)),
                ('no_isbn', models.BooleanField(db_index=True, default=False)),
                ('valid_isbn', models.CharField(max_length=13, db_index=True)),
                ('variant_of_id', models.IntegerField(db_index=True, default=0)),
                ('variant_name', models.CharField(max_length=255)),
                ('barcode', models.CharField(max_length=38, db_index=True)),
                ('no_barcode', models.BooleanField(default=False)),
                ('rating', models.CharField(db_index=True, max_length=255, default='')),
                ('no_rating', models.BooleanField(db_index=True, default=False)),
                ('is_first_issue', models.BooleanField(default=False)),
                ('is_last_issue', models.BooleanField(default=False)),
                ('publication_date', models.CharField(max_length=255)),
                ('key_date', models.CharField(max_length=10, db_index=True)),
                ('on_sale_date', models.CharField(max_length=10, db_index=True)),
                ('on_sale_date_uncertain', models.BooleanField(default=False)),
                ('sort_code', models.IntegerField(db_index=True)),
                ('indicia_frequency', models.CharField(max_length=255)),
                ('no_indicia_frequency', models.BooleanField(db_index=True, default=False)),
                ('price', models.CharField(max_length=255)),
                ('page_count', models.DecimalField(max_digits=10, decimal_places=3, null=True)),
                ('page_count_uncertain', models.BooleanField(default=False)),
                ('editing', models.TextField()),
                ('no_editing', models.BooleanField(db_index=True, default=False)),
                ('notes', models.TextField(null=True)),
                ('keywords', models.TextField(null=True)),
                ('is_indexed', models.IntegerField(db_index=True, default=0)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('indicia_pub_not_printed', models.BooleanField(default=False)),
                ('no_brand', models.BooleanField(db_index=True, default=False)),
                ('small_url', models.URLField(blank=True, max_length=255, null=True)),
                ('medium_url', models.URLField(blank=True, max_length=255, null=True)),
                ('large_url', models.URLField(blank=True, max_length=255, null=True)),
                ('alt_small_url', models.URLField(blank=True, max_length=255, null=True)),
                ('alt_medium_url', models.URLField(blank=True, max_length=255, null=True)),
                ('alt_large_url', models.URLField(blank=True, max_length=255, null=True)),
                ('has_alternative', models.BooleanField(default=False)),
                ('publisher_name', models.CharField(max_length=255, db_index=True)),
                ('genre', models.CharField(blank=True, max_length=255, db_index=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=511, db_index=True, null=True)),
                ('brand', models.ForeignKey(to='api.GCDBrand', null=True)),
                ('images', models.ManyToManyField(to='api.GCDImage', blank=True)),
                ('indicia_publisher', models.ForeignKey(to='api.GCDIndiciaPublisher', null=True)),
            ],
            options={
                'ordering': ['series', 'sort_code'],
                'db_table': 'gcd_issues',
            },
        ),
        migrations.CreateModel(
            name='GCDLanguage',
            fields=[
                ('language_id', models.AutoField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=10)),
                ('name', models.CharField(max_length=255, db_index=True)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'gcd_languages',
            },
        ),
        migrations.CreateModel(
            name='GCDPublisher',
            fields=[
                ('publisher_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('year_began', models.PositiveSmallIntegerField(db_index=True, null=True)),
                ('year_ended', models.PositiveSmallIntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True, default=False)),
                ('year_ended_uncertain', models.BooleanField(db_index=True, default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=255, default='', null=True)),
                ('is_master', models.BooleanField(db_index=True, default=False)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('imprint_count', models.IntegerField(default=0)),
                ('brand_count', models.IntegerField(db_index=True, default=0)),
                ('indicia_publisher_count', models.IntegerField(db_index=True, default=0)),
                ('series_count', models.IntegerField(default=0)),
                ('issue_count', models.IntegerField(default=0)),
                ('country', models.ForeignKey(to='api.GCDCountry')),
                ('images', models.ManyToManyField(to='api.GCDImage', blank=True)),
                ('parent', models.ForeignKey(related_name='imprint_set', to='api.GCDPublisher', null=True)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'gcd_publishers',
            },
        ),
        migrations.CreateModel(
            name='GCDSeries',
            fields=[
                ('series_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, db_index=True)),
                ('sort_name', models.CharField(max_length=255, db_index=True)),
                ('format', models.CharField(max_length=255, default='')),
                ('color', models.CharField(max_length=255, default='')),
                ('dimensions', models.CharField(max_length=255, default='')),
                ('paper_stock', models.CharField(max_length=255, default='')),
                ('binding', models.CharField(max_length=255, default='')),
                ('publishing_format', models.CharField(max_length=255, default='')),
                ('tracking_notes', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('publication_notes', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('year_began', models.IntegerField(db_index=True)),
                ('year_ended', models.IntegerField(blank=True, default=0, null=True)),
                ('year_began_uncertain', models.BooleanField(default=False)),
                ('year_ended_uncertain', models.BooleanField(default=False)),
                ('publication_dates', models.CharField(max_length=255)),
                ('has_barcode', models.BooleanField(default=False)),
                ('has_indicia_frequency', models.BooleanField(default=False)),
                ('has_isbn', models.BooleanField(default=False)),
                ('has_issue_title', models.BooleanField(default=False)),
                ('has_volume', models.BooleanField(default=False)),
                ('has_rating', models.BooleanField(default=False)),
                ('is_current', models.BooleanField(default=False)),
                ('is_comics_publication', models.BooleanField(default=False)),
                ('is_singleton', models.BooleanField(default=False)),
                ('issue_count', models.IntegerField(blank=True, default=0, null=True)),
                ('has_gallery', models.BooleanField(db_index=True, default=False)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('open_reserve', models.IntegerField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('cover_url', models.URLField(blank=True, max_length=255, null=True)),
                ('publication_type_id', models.IntegerField(blank=0, null=True)),
                ('publisher_name', models.CharField(max_length=255, db_index=True)),
                ('country', models.ForeignKey(to='api.GCDCountry')),
                ('images', models.ManyToManyField(to='api.GCDImage', blank=True)),
                ('language', models.ForeignKey(to='api.GCDLanguage')),
                ('publisher', models.ForeignKey(to='api.GCDPublisher')),
            ],
            options={
                'ordering': ['sort_name', 'year_began'],
                'db_table': 'gcd_series',
            },
        ),
        migrations.CreateModel(
            name='GCDStory',
            fields=[
                ('story_id', models.AutoField(serialize=False, primary_key=True)),
                ('title', models.CharField(max_length=255)),
                ('title_inferred', models.BooleanField(db_index=True, default=False)),
                ('feature', models.CharField(max_length=255)),
                ('sequence_number', models.IntegerField()),
                ('page_count', models.DecimalField(max_digits=10, decimal_places=3, db_index=True, null=True)),
                ('page_count_uncertain', models.BooleanField(db_index=True, default=False)),
                ('script', models.TextField()),
                ('pencils', models.TextField()),
                ('inks', models.TextField()),
                ('colors', models.TextField()),
                ('letters', models.TextField()),
                ('editing', models.TextField()),
                ('no_script', models.BooleanField(db_index=True, default=False)),
                ('no_pencils', models.BooleanField(db_index=True, default=False)),
                ('no_inks', models.BooleanField(db_index=True, default=False)),
                ('no_colors', models.BooleanField(db_index=True, default=False)),
                ('no_letters', models.BooleanField(db_index=True, default=False)),
                ('no_editing', models.BooleanField(db_index=True, default=False)),
                ('job_number', models.CharField(max_length=25)),
                ('genre', models.CharField(max_length=255)),
                ('characters', models.TextField()),
                ('synopsis', models.TextField()),
                ('reprint_notes', models.TextField()),
                ('notes', models.TextField()),
                ('keywords', models.TextField(null=True)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('issue', models.ForeignKey(to='api.GCDIssue')),
            ],
            options={
                'ordering': ('sequence_number',),
                'db_table': 'gcd_stories',
            },
        ),
        migrations.CreateModel(
            name='GCDStoryType',
            fields=[
                ('story_type_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(unique=True, db_index=True, max_length=50)),
                ('sort_code', models.IntegerField(unique=True)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'gcd_story_types',
            },
        ),
        migrations.CreateModel(
            name='HelpRequest',
            fields=[
                ('help_id', models.AutoField(serialize=False, primary_key=True)),
                ('subject', models.PositiveSmallIntegerField(choices=[(1, 'Feedback'), (2, 'Error'), (3, 'Checkout'), (4, 'Inventory'), (5, 'Pull List'), (6, 'Sales'), (7, 'Emailing List'), (8, 'Store Settings / Users'), (9, 'Dashboard')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], default=1)),
                ('subject_url', models.URLField(blank=True, null=True)),
                ('message', models.TextField()),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(to='api.Customer', null=True, blank=True)),
                ('employee', models.ForeignKey(to='api.Employee', null=True, blank=True)),
            ],
            options={
                'ordering': ('submission_date',),
                'db_table': 'ec_help_requests',
            },
        ),
        migrations.CreateModel(
            name='ImageBinaryUpload',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_index=True)),
                ('created', models.DateField(auto_now=True, null=True)),
                ('file_type', models.CharField(choices=[('png', 'Portable Network Graphics (PNG)'), ('jpeg', 'Joint Photographic Experts Group picture (JPEG)'), ('jpg', 'Joint Photographic Experts Group picture (JPG)'), ('bmp', 'Bitmap Image File (BMP)'), ('tiff', 'Tagged Image File Format (TIFF)'), ('gif', 'Graphics Interchange Format (GIF)')], max_length=4, db_index=True)),
                ('mime_type', models.CharField(db_index=True, choices=[('image/png', 'PNG'), ('image/jpeg', 'JPEG/JPG'), ('image/bmp', 'BMP'), ('image/tiff', 'TIFF'), ('image/gif', 'GIF')], max_length=15, default='image/jpeg')),
                ('data', models.BinaryField()),
                ('owner', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'db_table': 'ec_image_binary_uploads',
            },
        ),
        migrations.CreateModel(
            name='ImageUpload',
            fields=[
                ('upload_id', models.AutoField(serialize=False, primary_key=True)),
                ('upload_date', models.DateField(auto_now=True, null=True)),
                ('is_assigned', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, upload_to='upload', null=True)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('upload_date',),
                'db_table': 'ec_image_uploads',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=127)),
                ('description', models.TextField(blank=True, null=True)),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_suspended', models.BooleanField(default=False)),
                ('street_name', models.CharField(max_length=63)),
                ('street_number', models.CharField(blank=True, max_length=31, null=True)),
                ('unit_number', models.CharField(blank=True, max_length=15, null=True)),
                ('city', models.CharField(max_length=63)),
                ('province', models.CharField(choices=[('Alberta', 'Alberta'), ('British Columbia', 'British Columbia'), ('Manitoba', 'Manitoba'), ('New Brunswick', 'New Brunswick'), ('Newfoundland and Labrador', 'Newfoundland and Labrador'), ('Nova Scotia', 'Nova Scotia'), ('Ontario', 'Ontario'), ('Prince Edward Island', 'Prince Edward Island'), ('Quebec', 'Quebec'), ('Saskatchewan', 'Saskatchewan'), ('Northwest Territories', 'Northwest Territories'), ('Nunavut', 'Nunavut'), ('Yukon', 'Yukon'), ('Alabama', 'Alabama'), ('Alaska', 'Alaska'), ('Arizona', 'Arizona'), ('Arkansas', 'Arkansas'), ('California', 'California'), ('Colorado', 'Colorado'), ('Connecticut', 'Connecticut'), ('Delaware', 'Delaware'), ('Florida', 'Florida'), ('Georgia', 'Georgia'), ('Hawaii', 'Hawaii'), ('Idaho', 'Idaho'), ('Illinois', 'Illinois'), ('Indiana', 'Indiana'), ('Iowa', 'Iowa'), ('Kansas', 'Kansas'), ('Kentucky', 'Kentucky'), ('Louisiana', 'Louisiana'), ('Maine', 'Maine'), ('Maryland', 'Maryland'), ('Massachusetts', 'Massachusetts'), ('Michigan', 'Michigan'), ('Minnesota', 'Minnesota'), ('Mississippi', 'Mississippi'), ('Missouri', 'Missouri'), ('Montana', 'Montana'), ('Nebraska', 'Nebraska'), ('Nevada', 'Nevada'), ('New Hampshire', 'New Hampshire'), ('New Jersey', 'New Jersey'), ('New Mexico', 'New Mexico'), ('New York', 'New York'), ('North Carolina', 'North Carolina'), ('North Dakota', 'North Dakota'), ('Ohio', 'Ohio'), ('Oklahoma', 'Oklahoma'), ('Oregon', 'Oregon'), ('Pennsylvania', 'Pennsylvania'), ('Rhode Island', 'Rhode Island'), ('South Carolina', 'South Carolina'), ('South Dakota', 'South Dakota'), ('Tennessee', 'Tennessee'), ('Texas', 'Texas'), ('Utah', 'Utah'), ('Vermont', 'Vermont'), ('Virginia', 'Virginia'), ('Washington', 'Washington'), ('West Virginia', 'West Virginia'), ('Wisconsin', 'Wisconsin'), ('Wyoming', 'Wyoming'), ('Other', 'Other')], max_length=63)),
                ('country', models.CharField(choices=[('Canada', 'Canada'), ('United States', 'United States'), ('Mexico', 'Mexico'), ('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas, The', 'Bahamas, The'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burma', 'Burma'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo, Democratic Republic of the', 'Congo, Democratic Republic of the'), ('Congo, Republic of the', 'Congo, Republic of the'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('Gambia, The', 'Gambia, The'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Holy See', 'Holy See'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea, North', 'Korea, North'), ('Korea, South', 'Korea, South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('Netherlands Antilles', 'Netherlands Antilles'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('North Korea', 'North Korea'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palestinian Territories', 'Palestinian Territories'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Korea', 'South Korea'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Timor-Leste', 'Timor-Leste'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('Other', 'Other')], max_length=63)),
                ('postal', models.CharField(max_length=31)),
                ('currency', models.PositiveSmallIntegerField(choices=[(124, 'CAD'), (840, 'USD')], default=124)),
                ('language', models.CharField(choices=[('EN', 'English')], max_length=2, default='EN')),
                ('website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('fax', models.CharField(blank=True, max_length=10, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('google_url', models.URLField(blank=True, null=True)),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('flickr_url', models.URLField(blank=True, null=True)),
                ('paypal_email', models.EmailField(max_length=254)),
                ('style', models.CharField(choices=[('ecantina-style-0.css', 'Green'), ('ecantina-style-1.css', 'Ligh Green'), ('ecantina-style-2.css', 'Aqua Green'), ('ecantina-style-3.css', 'Blue'), ('ecantina-style-4.css', 'Purple'), ('ecantina-style-5.css', 'Red'), ('ecantina-style-6.css', 'Dark Grey'), ('ecantina-style-7.css', 'Grey'), ('ecantina-style-8.css', 'Light Aqua Green'), ('ecantina-style-9.css', 'Yellow'), ('ecantina-style-10.css', 'Light Red'), ('ecantina-style-11.css', 'Dark Blue'), ('ecantina-style-black.css', 'Black')], max_length=31, default='ecantina-style-5.css')),
                ('administrator', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
                ('customers', models.ManyToManyField(to='api.Customer', blank=True)),
                ('header', models.ForeignKey(related_name='org_header', to='api.ImageUpload', null=True, blank=True)),
                ('logo', models.ForeignKey(related_name='org_logo', to='api.ImageUpload', null=True, blank=True)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ec_organizations',
            },
        ),
        migrations.CreateModel(
            name='OrgShippingPreference',
            fields=[
                ('shipping_pref_id', models.AutoField(serialize=False, primary_key=True)),
                ('is_pickup_only', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('organization',),
                'db_table': 'ec_org_shipping_preferences',
            },
        ),
        migrations.CreateModel(
            name='OrgShippingRate',
            fields=[
                ('shipping_rate_id', models.AutoField(serialize=False, primary_key=True)),
                ('country', models.PositiveSmallIntegerField(choices=[(124, 'Canada'), (840, 'United States'), (484, 'Mexico')], blank=True, validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(840)], null=True)),
                ('comics_rate1', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate2', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate3', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate4', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate5', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate6', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate7', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate8', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate9', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate10', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('country',),
                'db_table': 'ec_org_shipping_rates',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(blank=True, max_length=511, db_index=True, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Comic'), (2, 'Furniture'), (3, 'Coin')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], default=1)),
                ('description', models.TextField(default='', blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_sold', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('is_new', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('sub_price', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('has_tax', models.BooleanField(default=True)),
                ('tax_rate', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('tax_amount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('sub_price_with_tax', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('discount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('discount_type', models.PositiveSmallIntegerField(choices=[(1, '%'), (2, '$')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], default=1)),
                ('price', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('cost', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('currency', models.PositiveSmallIntegerField(choices=[(124, 'CAD'), (840, 'USD')], default=124)),
                ('language', models.CharField(choices=[('EN', 'English')], max_length=2, default='EN')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('qrcode', models.ImageField(blank=True, upload_to='qrcode', null=True)),
                ('is_qrcode_printed', models.BooleanField(default=False)),
                ('has_no_shipping', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(to='api.Brand', null=True, blank=True)),
                ('category', models.ForeignKey(to='api.Category')),
                ('image', models.ForeignKey(to='api.ImageUpload', null=True, blank=True)),
                ('images', models.ManyToManyField(related_name='product_images', to='api.ImageUpload', blank=True)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('product_id', 'type'),
                'db_table': 'ec_products',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('promotion_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=127)),
                ('discount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('discount_type', models.PositiveSmallIntegerField(choices=[(1, '%'), (2, '$')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], default=1)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ec_promotions',
            },
        ),
        migrations.CreateModel(
            name='Pulllist',
            fields=[
                ('pulllist_id', models.AutoField(serialize=False, primary_key=True)),
                ('organization', models.ForeignKey(to='api.Organization')),
                ('series', models.ForeignKey(to='api.GCDSeries', null=True)),
            ],
            options={
                'ordering': ('series',),
                'db_table': 'ec_pulllists',
            },
        ),
        migrations.CreateModel(
            name='PulllistSubscription',
            fields=[
                ('subscription_id', models.AutoField(serialize=False, primary_key=True)),
                ('copies', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], default=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(to='api.Customer')),
                ('organization', models.ForeignKey(to='api.Organization')),
                ('pulllist', models.ForeignKey(to='api.Pulllist')),
            ],
            options={
                'db_table': 'ec_pulllists_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('receipt_id', models.AutoField(serialize=False, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('purchased', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=511, default='', null=True)),
                ('has_purchased_online', models.BooleanField(default=False)),
                ('payment_method', models.PositiveSmallIntegerField(choices=[(1, 'Cash'), (2, 'Debit Card'), (3, 'Credit Card'), (4, 'Gift Card'), (5, 'Store Points'), (6, 'Cheque'), (7, 'PayPal'), (8, 'Invoice'), (9, 'Other')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], default=1)),
                ('status', models.PositiveSmallIntegerField(db_index=True, choices=[(1, 'New Order'), (2, 'Picked'), (3, 'Shipped'), (4, 'Received'), (5, 'In-Store Sale'), (6, 'Online Sale')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], default=1)),
                ('has_shipping', models.BooleanField(db_index=True, default=False)),
                ('sub_total', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('has_tax', models.BooleanField(default=True)),
                ('tax_rate', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('tax_amount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('sub_total_with_tax', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('discount_amount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('shipping_amount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('total_amount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('has_finished', models.BooleanField(db_index=True, default=False)),
                ('has_paid', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('billing_address', models.CharField(blank=True, max_length=63, null=True)),
                ('billing_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('billing_city', models.CharField(blank=True, max_length=63, null=True)),
                ('billing_province', models.CharField(blank=True, max_length=63, null=True)),
                ('billing_country', models.CharField(blank=True, max_length=63, null=True)),
                ('billing_postal', models.CharField(blank=True, max_length=31, null=True)),
                ('shipping_address', models.CharField(blank=True, max_length=63, null=True)),
                ('shipping_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('shipping_city', models.CharField(blank=True, max_length=63, null=True)),
                ('shipping_province', models.CharField(blank=True, max_length=63, null=True)),
                ('shipping_country', models.CharField(blank=True, max_length=63, null=True)),
                ('shipping_postal', models.CharField(blank=True, max_length=31, null=True)),
                ('has_error', models.BooleanField(db_index=True, default=False)),
                ('error', models.PositiveSmallIntegerField(choices=[(0, 'No Error'), (1, 'Cancelled Online Order')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], default=0)),
                ('customer', models.ForeignKey(to='api.Customer', null=True, blank=True)),
                ('employee', models.ForeignKey(to='api.Employee', null=True, blank=True)),
                ('organization', models.ForeignKey(to='api.Organization', null=True, blank=True)),
                ('products', models.ManyToManyField(related_name='receipt_products', to='api.Product', blank=True)),
            ],
            options={
                'ordering': ('last_updated',),
                'db_table': 'ec_receipts',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=127, db_index=True)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ec_sections',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('store_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=127)),
                ('description', models.TextField(blank=True, null=True)),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_suspended', models.BooleanField(default=False)),
                ('tax_rate', models.DecimalField(max_digits=10, default=0.13, decimal_places=2)),
                ('street_name', models.CharField(max_length=63)),
                ('street_number', models.CharField(blank=True, max_length=31, null=True)),
                ('unit_number', models.CharField(blank=True, max_length=15, null=True)),
                ('city', models.CharField(max_length=63)),
                ('province', models.CharField(choices=[('Alberta', 'Alberta'), ('British Columbia', 'British Columbia'), ('Manitoba', 'Manitoba'), ('New Brunswick', 'New Brunswick'), ('Newfoundland and Labrador', 'Newfoundland and Labrador'), ('Nova Scotia', 'Nova Scotia'), ('Ontario', 'Ontario'), ('Prince Edward Island', 'Prince Edward Island'), ('Quebec', 'Quebec'), ('Saskatchewan', 'Saskatchewan'), ('Northwest Territories', 'Northwest Territories'), ('Nunavut', 'Nunavut'), ('Yukon', 'Yukon'), ('Alabama', 'Alabama'), ('Alaska', 'Alaska'), ('Arizona', 'Arizona'), ('Arkansas', 'Arkansas'), ('California', 'California'), ('Colorado', 'Colorado'), ('Connecticut', 'Connecticut'), ('Delaware', 'Delaware'), ('Florida', 'Florida'), ('Georgia', 'Georgia'), ('Hawaii', 'Hawaii'), ('Idaho', 'Idaho'), ('Illinois', 'Illinois'), ('Indiana', 'Indiana'), ('Iowa', 'Iowa'), ('Kansas', 'Kansas'), ('Kentucky', 'Kentucky'), ('Louisiana', 'Louisiana'), ('Maine', 'Maine'), ('Maryland', 'Maryland'), ('Massachusetts', 'Massachusetts'), ('Michigan', 'Michigan'), ('Minnesota', 'Minnesota'), ('Mississippi', 'Mississippi'), ('Missouri', 'Missouri'), ('Montana', 'Montana'), ('Nebraska', 'Nebraska'), ('Nevada', 'Nevada'), ('New Hampshire', 'New Hampshire'), ('New Jersey', 'New Jersey'), ('New Mexico', 'New Mexico'), ('New York', 'New York'), ('North Carolina', 'North Carolina'), ('North Dakota', 'North Dakota'), ('Ohio', 'Ohio'), ('Oklahoma', 'Oklahoma'), ('Oregon', 'Oregon'), ('Pennsylvania', 'Pennsylvania'), ('Rhode Island', 'Rhode Island'), ('South Carolina', 'South Carolina'), ('South Dakota', 'South Dakota'), ('Tennessee', 'Tennessee'), ('Texas', 'Texas'), ('Utah', 'Utah'), ('Vermont', 'Vermont'), ('Virginia', 'Virginia'), ('Washington', 'Washington'), ('West Virginia', 'West Virginia'), ('Wisconsin', 'Wisconsin'), ('Wyoming', 'Wyoming'), ('Other', 'Other')], max_length=63)),
                ('country', models.CharField(choices=[('Canada', 'Canada'), ('United States', 'United States'), ('Mexico', 'Mexico'), ('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas, The', 'Bahamas, The'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burma', 'Burma'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo, Democratic Republic of the', 'Congo, Democratic Republic of the'), ('Congo, Republic of the', 'Congo, Republic of the'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curacao', 'Curacao'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor', 'East Timor'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('Gambia, The', 'Gambia, The'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Holy See', 'Holy See'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea, North', 'Korea, North'), ('Korea, South', 'Korea, South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macau', 'Macau'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('Netherlands Antilles', 'Netherlands Antilles'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('North Korea', 'North Korea'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palestinian Territories', 'Palestinian Territories'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten', 'Sint Maarten'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Korea', 'South Korea'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Timor-Leste', 'Timor-Leste'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('Other', 'Other')], max_length=63)),
                ('postal', models.CharField(max_length=31)),
                ('currency', models.PositiveSmallIntegerField(choices=[(124, 'CAD'), (840, 'USD')], default=124)),
                ('language', models.CharField(choices=[('EN', 'English')], max_length=2, default='EN')),
                ('website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('fax', models.CharField(blank=True, max_length=10, null=True)),
                ('is_open_monday', models.BooleanField(default=False)),
                ('is_open_tuesday', models.BooleanField(default=False)),
                ('is_open_wednesday', models.BooleanField(default=False)),
                ('is_open_thursday', models.BooleanField(default=False)),
                ('is_open_friday', models.BooleanField(default=False)),
                ('is_open_saturday', models.BooleanField(default=False)),
                ('is_open_sunday', models.BooleanField(default=False)),
                ('monday_to', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('tuesday_to', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('wednesday_to', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('thursday_to', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('friday_to', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('saturday_to', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('sunday_to', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('monday_from', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('tuesday_from', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('wednesday_from', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('thursday_from', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('friday_from', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('saturday_from', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('sunday_from', models.CharField(choices=[('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30')], blank=True, max_length=5, null=True)),
                ('is_aggregated', models.BooleanField(default=True)),
                ('has_shipping_rate_override', models.BooleanField(default=False)),
                ('is_comics_vendor', models.BooleanField(default=True)),
                ('is_furniture_vendor', models.BooleanField(default=False)),
                ('is_coins_vendor', models.BooleanField(default=False)),
                ('paypal_email', models.EmailField(max_length=254)),
                ('style', models.CharField(choices=[('ecantina-style-0.css', 'Green'), ('ecantina-style-1.css', 'Ligh Green'), ('ecantina-style-2.css', 'Aqua Green'), ('ecantina-style-3.css', 'Blue'), ('ecantina-style-4.css', 'Purple'), ('ecantina-style-5.css', 'Red'), ('ecantina-style-6.css', 'Dark Grey'), ('ecantina-style-7.css', 'Grey'), ('ecantina-style-8.css', 'Light Aqua Green'), ('ecantina-style-9.css', 'Yellow'), ('ecantina-style-10.css', 'Light Red'), ('ecantina-style-11.css', 'Dark Blue'), ('ecantina-style-black.css', 'Black')], max_length=31, default='ecantina-style-5.css')),
                ('employees', models.ManyToManyField(to='api.Employee', blank=True)),
                ('header', models.ForeignKey(related_name='store_header', to='api.ImageUpload', null=True, blank=True)),
                ('logo', models.ForeignKey(related_name='store_logo', to='api.ImageUpload', null=True, blank=True)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('store_id',),
                'db_table': 'ec_stores',
            },
        ),
        migrations.CreateModel(
            name='StoreShippingPreference',
            fields=[
                ('shipping_pref_id', models.AutoField(serialize=False, primary_key=True)),
                ('is_pickup_only', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('organization',),
                'db_table': 'ec_store_shipping_preferences',
            },
        ),
        migrations.CreateModel(
            name='StoreShippingRate',
            fields=[
                ('shipping_rate_id', models.AutoField(serialize=False, primary_key=True)),
                ('country', models.PositiveSmallIntegerField(choices=[(124, 'Canada'), (840, 'United States'), (484, 'Mexico')], blank=True, validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(840)], null=True)),
                ('comics_rate1', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate2', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate3', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate4', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate5', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate6', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate7', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate8', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate9', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate10', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('organization', models.ForeignKey(to='api.Organization')),
                ('store', models.ForeignKey(to='api.Store')),
            ],
            options={
                'ordering': ('country',),
                'db_table': 'ec_store_shipping_rates',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=127)),
                ('discount', models.DecimalField(max_digits=10, default=0.0, decimal_places=2)),
                ('discount_type', models.PositiveSmallIntegerField(choices=[(1, '%'), (2, '$')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], default=1)),
                ('organization', models.ForeignKey(to='api.Organization')),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ec_tags',
            },
        ),
        migrations.CreateModel(
            name='UnifiedShippingRate',
            fields=[
                ('shipping_rate_id', models.AutoField(serialize=False, primary_key=True)),
                ('country', models.PositiveSmallIntegerField(choices=[(124, 'Canada'), (840, 'United States'), (484, 'Mexico')], blank=True, validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(840)], null=True)),
                ('comics_rate1', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate2', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate3', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate4', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate5', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate6', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate7', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate8', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate9', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
                ('comics_rate10', models.DecimalField(max_digits=10, db_index=True, default=0.0, decimal_places=2)),
            ],
            options={
                'ordering': ('country',),
                'db_table': 'ec_unified_shipping_rates',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('wishlist_id', models.AutoField(serialize=False, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(to='api.Customer')),
                ('product', models.ForeignKey(to='api.Product')),
            ],
            options={
                'db_table': 'ec_wishlists',
            },
        ),
        migrations.AddField(
            model_name='storeshippingpreference',
            name='rates',
            field=models.ManyToManyField(related_name='store_shipping_rates', to='api.StoreShippingRate', db_index=True, blank=True),
        ),
        migrations.AddField(
            model_name='storeshippingpreference',
            name='store',
            field=models.ForeignKey(to='api.Store'),
        ),
        migrations.AddField(
            model_name='section',
            name='store',
            field=models.ForeignKey(to='api.Store'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='store',
            field=models.ForeignKey(to='api.Store', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='pulllist',
            name='store',
            field=models.ForeignKey(to='api.Store'),
        ),
        migrations.AddField(
            model_name='product',
            name='section',
            field=models.ForeignKey(to='api.Section'),
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(to='api.Store'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(related_name='product_tags', to='api.Tag', db_index=True, blank=True),
        ),
        migrations.AddField(
            model_name='orgshippingpreference',
            name='rates',
            field=models.ManyToManyField(related_name='ord_shipping_rates', to='api.OrgShippingRate', db_index=True, blank=True),
        ),
        migrations.AddField(
            model_name='helprequest',
            name='organization',
            field=models.ForeignKey(to='api.Organization', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='helprequest',
            name='screenshot',
            field=models.ForeignKey(to='api.ImageUpload', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='helprequest',
            name='store',
            field=models.ForeignKey(to='api.Store', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='gcdstory',
            name='type',
            field=models.ForeignKey(to='api.GCDStoryType'),
        ),
        migrations.AddField(
            model_name='gcdissue',
            name='series',
            field=models.ForeignKey(to='api.GCDSeries', null=True),
        ),
        migrations.AddField(
            model_name='gcdindiciapublisher',
            name='parent',
            field=models.ForeignKey(to='api.GCDPublisher', null=True),
        ),
        migrations.AddField(
            model_name='gcdbranduse',
            name='publisher',
            field=models.ForeignKey(to='api.GCDPublisher'),
        ),
        migrations.AddField(
            model_name='gcdbrandgroup',
            name='parent',
            field=models.ForeignKey(to='api.GCDPublisher', null=True),
        ),
        migrations.AddField(
            model_name='gcdbrandemblemgroup',
            name='brandgroup',
            field=models.ForeignKey(to='api.GCDBrandGroup', null=True),
        ),
        migrations.AddField(
            model_name='gcdbrand',
            name='group',
            field=models.ManyToManyField(to='api.GCDBrandGroup', db_table='gcd_brand_emblem_group', blank=True),
        ),
        migrations.AddField(
            model_name='gcdbrand',
            name='images',
            field=models.ManyToManyField(to='api.GCDImage', blank=True),
        ),
        migrations.AddField(
            model_name='gcdbrand',
            name='parent',
            field=models.ForeignKey(to='api.GCDPublisher', null=True),
        ),
        migrations.AddField(
            model_name='employee',
            name='organization',
            field=models.ForeignKey(to='api.Organization'),
        ),
        migrations.AddField(
            model_name='employee',
            name='profile',
            field=models.ForeignKey(to='api.ImageUpload', on_delete=django.db.models.deletion.SET_NULL, null=True, blank=True),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='emailsubscription',
            name='organization',
            field=models.ForeignKey(to='api.Organization', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='emailsubscription',
            name='store',
            field=models.ForeignKey(to='api.Store', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='profile',
            field=models.ForeignKey(to='api.ImageUpload', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True, blank=True),
        ),
        migrations.AddField(
            model_name='comic',
            name='issue',
            field=models.ForeignKey(to='api.GCDIssue'),
        ),
        migrations.AddField(
            model_name='comic',
            name='organization',
            field=models.ForeignKey(to='api.Organization'),
        ),
        migrations.AddField(
            model_name='comic',
            name='product',
            field=models.ForeignKey(to='api.Product'),
        ),
    ]
