# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
import django.core.validators
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('brand_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_count', models.IntegerField(default=0)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('year_began', models.IntegerField(null=True, db_index=True)),
                ('year_ended', models.IntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True)),
                ('year_ended_uncertain', models.BooleanField(db_index=True)),
                ('notes', models.TextField()),
                ('keywords', models.TextField(null=True)),
                ('url', models.URLField(blank=True, max_length=255, default='')),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'db_table': 'gcd_brands',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='BrandEmblemGroup',
            fields=[
                ('brand_emblem_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('brand', models.ForeignKey(null=True, to='inventory.Brand')),
            ],
            options={
                'db_table': 'gcd_brand_emblem_groups',
                'ordering': ('brand',),
            },
        ),
        migrations.CreateModel(
            name='BrandGroup',
            fields=[
                ('brand_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_count', models.IntegerField(default=0)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('year_began', models.IntegerField(null=True, db_index=True)),
                ('year_ended', models.IntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True)),
                ('year_ended_uncertain', models.BooleanField(db_index=True)),
                ('notes', models.TextField()),
                ('keywords', models.TextField(null=True)),
                ('url', models.URLField(blank=True, max_length=255, default='')),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'db_table': 'gcd_brand_groups',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='BrandUse',
            fields=[
                ('brand_use_id', models.AutoField(primary_key=True, serialize=False)),
                ('year_began', models.IntegerField(null=True, db_index=True)),
                ('year_ended', models.IntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True)),
                ('year_ended_uncertain', models.BooleanField(db_index=True)),
                ('notes', models.TextField()),
                ('reserved', models.BooleanField(db_index=True, default=0)),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
                ('emblem', models.ForeignKey(to='inventory.Brand', related_name='in_use')),
            ],
            options={
                'db_table': 'gcd_brand_uses',
                'ordering': ('publisher',),
            },
        ),
        migrations.CreateModel(
            name='Comic',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_cgc_rated', models.BooleanField(default=False)),
                ('age', models.PositiveSmallIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], null=True, choices=[(1, 'Gold'), (2, 'Silver'), (3, 'Bronze'), (4, 'Copper')])),
                ('cgc_rating', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], null=True, choices=[(10.0, 'Gem Mint'), (9.9, 'Mint'), (9.8, 'Near Mint/Mintt'), (9.6, 'Near Mint +'), (9.4, 'Near Mint'), (9.2, 'Near Mint -'), (9.0, 'Very Fine/Near Mint'), (8.5, 'Very Fine +'), (8.0, 'Very Fine'), (7.5, 'Very Fine -'), (7.0, 'Fine/Very Fine'), (6.5, 'Fine +'), (6.0, 'Fine'), (5.5, 'Fine -'), (5.0, 'Very Good/Fine'), (4.5, 'Very Good +'), (4.0, 'Very Good'), (3.5, 'Very Good -'), (3.0, 'Good/Very Good'), (2.5, 'Good +'), (2.0, 'Good'), (1.8, 'Good -'), (1.5, 'Fair/Good'), (1.0, 'Fair'), (0.5, 'Poor')])),
                ('label_colour', models.CharField(blank=True, null=True, max_length=63, choices=[('Purple', 'Purple'), ('Red', 'Red'), ('Blue', 'Blue'), ('Yellow', 'Yellow')])),
                ('condition_rating', models.PositiveSmallIntegerField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], null=True, choices=[(10, 'Near Mint'), (8, 'Very Fine'), (6, 'Fine'), (4, 'Very Good'), (2, 'Good'), (1, 'Fair'), (0, 'Poor')])),
                ('is_canadian_priced_variant', models.BooleanField(default=False)),
                ('is_variant_cover', models.BooleanField(default=False)),
                ('is_retail_incentive_variant', models.BooleanField(default=False)),
                ('is_newsstand_edition', models.BooleanField(default=False)),
                ('price', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0)], null=True)),
                ('cost', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0)], null=True)),
            ],
            options={
                'db_table': 'ec_comics',
                'ordering': ('issue',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(unique=True, max_length=10)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'db_table': 'gcd_countries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.PositiveSmallIntegerField(choices=[(0, 'Owner'), (1, 'Manager'), (2, 'Clerc'), (3, 'Cashier')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)], default=0)),
            ],
            options={
                'db_table': 'ec_employees',
                'ordering': ('employee_id',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('file', models.FileField(null=True, upload_to='uploads')),
            ],
            options={
                'db_table': 'gcd_images',
            },
        ),
        migrations.CreateModel(
            name='ImageUpload',
            fields=[
                ('upload_id', models.AutoField(primary_key=True, serialize=False)),
                ('upload_date', models.DateField(null=True, auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='upload')),
                ('user', models.ForeignKey(null=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ec_image_uploads',
                'ordering': ('upload_date',),
            },
        ),
        migrations.CreateModel(
            name='IndiciaPublisher',
            fields=[
                ('indicia_publisher_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('year_began', models.PositiveSmallIntegerField(null=True, db_index=True)),
                ('year_ended', models.PositiveSmallIntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True, default=False)),
                ('year_ended_uncertain', models.BooleanField(db_index=True, default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True, max_length=255, default='')),
                ('is_surrogate', models.BooleanField(db_index=True)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('imprint_count', models.IntegerField(default=0)),
                ('brand_count', models.IntegerField(default=0, db_index=True)),
                ('indicia_publisher_count', models.IntegerField(default=0, db_index=True)),
                ('series_count', models.IntegerField(default=0)),
                ('issue_count', models.IntegerField(default=0)),
                ('country', models.ForeignKey(to='inventory.Country')),
                ('images', models.ManyToManyField(to='inventory.Image')),
            ],
            options={
                'db_table': 'gcd_indicia_publishers',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('issue_id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.CharField(db_index=True, max_length=50)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('no_title', models.BooleanField(db_index=True, default=False)),
                ('volume', models.CharField(db_index=True, max_length=50)),
                ('no_volume', models.BooleanField(db_index=True, default=False)),
                ('display_volume_with_number', models.BooleanField(db_index=True, default=False)),
                ('isbn', models.CharField(db_index=True, max_length=32)),
                ('no_isbn', models.BooleanField(db_index=True, default=False)),
                ('valid_isbn', models.CharField(db_index=True, max_length=13)),
                ('variant_of_id', models.IntegerField(default=0, db_index=True)),
                ('variant_name', models.CharField(max_length=255)),
                ('barcode', models.CharField(db_index=True, max_length=38)),
                ('no_barcode', models.BooleanField(default=False)),
                ('rating', models.CharField(default='', db_index=True, max_length=255)),
                ('no_rating', models.BooleanField(db_index=True, default=False)),
                ('is_first_issue', models.BooleanField(default=False)),
                ('is_last_issue', models.BooleanField(default=False)),
                ('publication_date', models.CharField(max_length=255)),
                ('key_date', models.CharField(db_index=True, max_length=10)),
                ('on_sale_date', models.CharField(db_index=True, max_length=10)),
                ('on_sale_date_uncertain', models.BooleanField(default=False)),
                ('sort_code', models.IntegerField(db_index=True)),
                ('indicia_frequency', models.CharField(max_length=255)),
                ('no_indicia_frequency', models.BooleanField(db_index=True, default=False)),
                ('price', models.CharField(max_length=255)),
                ('page_count', models.DecimalField(decimal_places=3, null=True, max_digits=10)),
                ('page_count_uncertain', models.BooleanField(default=False)),
                ('editing', models.TextField()),
                ('no_editing', models.BooleanField(db_index=True, default=False)),
                ('notes', models.TextField(null=True)),
                ('keywords', models.TextField(null=True)),
                ('is_indexed', models.IntegerField(default=0, db_index=True)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('indicia_pub_not_printed', models.BooleanField(default=False)),
                ('no_brand', models.BooleanField(db_index=True, default=False)),
                ('small_url', models.URLField(blank=True, null=True, max_length=255)),
                ('medium_url', models.URLField(blank=True, null=True, max_length=255)),
                ('large_url', models.URLField(blank=True, null=True, max_length=255)),
                ('alt_small_url', models.URLField(blank=True, null=True, max_length=255)),
                ('alt_medium_url', models.URLField(blank=True, null=True, max_length=255)),
                ('alt_large_url', models.URLField(blank=True, null=True, max_length=255)),
                ('has_alternative', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(null=True, to='inventory.Brand')),
                ('images', models.ManyToManyField(to='inventory.Image')),
                ('indicia_publisher', models.ForeignKey(null=True, to='inventory.IndiciaPublisher')),
            ],
            options={
                'db_table': 'gcd_issues',
                'ordering': ['series', 'sort_code'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('language_id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(unique=True, max_length=10)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
            options={
                'db_table': 'gcd_languages',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=127)),
            ],
            options={
                'db_table': 'ec_locations',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=127)),
                ('description', models.TextField(blank=True, null=True)),
                ('joined', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('street_name', models.CharField(max_length=63)),
                ('street_number', models.CharField(blank=True, null=True, max_length=31)),
                ('unit_number', models.CharField(blank=True, null=True, max_length=15)),
                ('city', models.CharField(max_length=63)),
                ('province', models.CharField(max_length=63)),
                ('country', models.CharField(max_length=63)),
                ('postal', models.CharField(max_length=31)),
                ('website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, null=True, max_length=254)),
                ('phone', models.CharField(blank=True, null=True, max_length=31)),
                ('fax', models.CharField(blank=True, null=True, max_length=31)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('google_url', models.URLField(blank=True, null=True)),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('flickr_url', models.URLField(blank=True, null=True)),
                ('administrator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('logo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, blank=True, to='inventory.ImageUpload')),
            ],
            options={
                'db_table': 'ec_organizations',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('publisher_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('year_began', models.PositiveSmallIntegerField(null=True, db_index=True)),
                ('year_ended', models.PositiveSmallIntegerField(null=True)),
                ('year_began_uncertain', models.BooleanField(db_index=True, default=False)),
                ('year_ended_uncertain', models.BooleanField(db_index=True, default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True, max_length=255, default='')),
                ('is_master', models.BooleanField(db_index=True, default=False)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('imprint_count', models.IntegerField(default=0)),
                ('brand_count', models.IntegerField(default=0, db_index=True)),
                ('indicia_publisher_count', models.IntegerField(default=0, db_index=True)),
                ('series_count', models.IntegerField(default=0)),
                ('issue_count', models.IntegerField(default=0)),
                ('country', models.ForeignKey(to='inventory.Country')),
                ('images', models.ManyToManyField(to='inventory.Image')),
                ('parent', models.ForeignKey(null=True, to='inventory.Publisher', related_name='imprint_set')),
            ],
            options={
                'db_table': 'gcd_publishers',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=127)),
                ('location', models.ForeignKey(to='inventory.Location')),
                ('organization', models.ForeignKey(to='inventory.Organization')),
            ],
            options={
                'db_table': 'ec_sections',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('series_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('sort_name', models.CharField(db_index=True, max_length=255)),
                ('format', models.CharField(default='', max_length=255)),
                ('color', models.CharField(default='', max_length=255)),
                ('dimensions', models.CharField(default='', max_length=255)),
                ('paper_stock', models.CharField(default='', max_length=255)),
                ('binding', models.CharField(default='', max_length=255)),
                ('publishing_format', models.CharField(default='', max_length=255)),
                ('tracking_notes', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('publication_notes', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('year_began', models.IntegerField(db_index=True)),
                ('year_ended', models.IntegerField(blank=True, null=True, default=0)),
                ('year_began_uncertain', models.BooleanField(default=False)),
                ('year_ended_uncertain', models.BooleanField(default=False)),
                ('publication_dates', models.CharField(max_length=255)),
                ('has_barcode', models.BooleanField(default=False)),
                ('has_indicia_frequency', models.BooleanField(default=False)),
                ('has_isbn', models.BooleanField(default=False)),
                ('has_issue_title', models.BooleanField(default=False)),
                ('has_volume', models.BooleanField(default=False)),
                ('has_rating', models.BooleanField(default=False)),
                ('is_current', models.BooleanField(default=False)),
                ('is_comics_publication', models.BooleanField(default=False)),
                ('is_singleton', models.BooleanField(default=False)),
                ('issue_count', models.IntegerField(blank=True, null=True, default=0)),
                ('has_gallery', models.BooleanField(db_index=True, default=False)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('open_reserve', models.IntegerField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('cover_url', models.URLField(blank=True, null=True, max_length=255)),
                ('publication_type_id', models.IntegerField(blank=0, null=True)),
                ('country', models.ForeignKey(to='inventory.Country')),
                ('images', models.ManyToManyField(to='inventory.Image')),
                ('language', models.ForeignKey(to='inventory.Language')),
                ('publisher', models.ForeignKey(to='inventory.Publisher')),
            ],
            options={
                'db_table': 'gcd_series',
                'ordering': ['sort_name', 'year_began'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('store_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=127)),
                ('description', models.TextField(blank=True, null=True)),
                ('joined', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('street_name', models.CharField(max_length=63)),
                ('street_number', models.CharField(blank=True, null=True, max_length=31)),
                ('unit_number', models.CharField(blank=True, null=True, max_length=15)),
                ('city', models.CharField(max_length=63)),
                ('province', models.CharField(max_length=63)),
                ('country', models.CharField(max_length=63)),
                ('postal', models.CharField(max_length=31)),
                ('website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, null=True, max_length=254)),
                ('phone', models.CharField(blank=True, null=True, max_length=31)),
                ('fax', models.CharField(blank=True, null=True, max_length=31)),
                ('organization', models.ForeignKey(to='inventory.Organization')),
            ],
            options={
                'db_table': 'ec_stores',
                'ordering': ('store_id',),
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('story_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('title_inferred', models.BooleanField(db_index=True, default=False)),
                ('feature', models.CharField(max_length=255)),
                ('sequence_number', models.IntegerField()),
                ('page_count', models.DecimalField(decimal_places=3, null=True, max_digits=10, db_index=True)),
                ('page_count_uncertain', models.BooleanField(db_index=True, default=False)),
                ('script', models.TextField()),
                ('pencils', models.TextField()),
                ('inks', models.TextField()),
                ('colors', models.TextField()),
                ('letters', models.TextField()),
                ('editing', models.TextField()),
                ('no_script', models.BooleanField(db_index=True, default=False)),
                ('no_pencils', models.BooleanField(db_index=True, default=False)),
                ('no_inks', models.BooleanField(db_index=True, default=False)),
                ('no_colors', models.BooleanField(db_index=True, default=False)),
                ('no_letters', models.BooleanField(db_index=True, default=False)),
                ('no_editing', models.BooleanField(db_index=True, default=False)),
                ('job_number', models.CharField(max_length=25)),
                ('genre', models.CharField(max_length=255)),
                ('characters', models.TextField()),
                ('synopsis', models.TextField()),
                ('reprint_notes', models.TextField()),
                ('notes', models.TextField()),
                ('keywords', models.TextField(null=True)),
                ('reserved', models.BooleanField(db_index=True, default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('issue', models.ForeignKey(to='inventory.Issue')),
            ],
            options={
                'db_table': 'gcd_stories',
                'ordering': ('sequence_number',),
            },
        ),
        migrations.CreateModel(
            name='StoryType',
            fields=[
                ('story_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(unique=True, db_index=True, max_length=50)),
                ('sort_code', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'gcd_story_types',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='story',
            name='type',
            field=models.ForeignKey(to='inventory.StoryType'),
        ),
        migrations.AddField(
            model_name='section',
            name='store',
            field=models.ForeignKey(to='inventory.Store'),
        ),
        migrations.AddField(
            model_name='location',
            name='organization',
            field=models.ForeignKey(to='inventory.Organization'),
        ),
        migrations.AddField(
            model_name='location',
            name='store',
            field=models.ForeignKey(to='inventory.Store'),
        ),
        migrations.AddField(
            model_name='issue',
            name='series',
            field=models.ForeignKey(null=True, to='inventory.Series'),
        ),
        migrations.AddField(
            model_name='indiciapublisher',
            name='parent',
            field=models.ForeignKey(null=True, to='inventory.Publisher'),
        ),
        migrations.AddField(
            model_name='employee',
            name='organization',
            field=models.ForeignKey(to='inventory.Organization'),
        ),
        migrations.AddField(
            model_name='employee',
            name='profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, blank=True, to='inventory.ImageUpload'),
        ),
        migrations.AddField(
            model_name='employee',
            name='store',
            field=models.ForeignKey(to='inventory.Store'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comic',
            name='cover',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, blank=True, to='inventory.ImageUpload'),
        ),
        migrations.AddField(
            model_name='comic',
            name='images',
            field=models.ManyToManyField(blank=True, to='inventory.ImageUpload', related_name='comic_images'),
        ),
        migrations.AddField(
            model_name='comic',
            name='issue',
            field=models.ForeignKey(to='inventory.Issue'),
        ),
        migrations.AddField(
            model_name='comic',
            name='location',
            field=models.ForeignKey(null=True, blank=True, to='inventory.Location'),
        ),
        migrations.AddField(
            model_name='comic',
            name='organization',
            field=models.ForeignKey(to='inventory.Organization'),
        ),
        migrations.AddField(
            model_name='comic',
            name='section',
            field=models.ForeignKey(null=True, blank=True, to='inventory.Section'),
        ),
        migrations.AddField(
            model_name='comic',
            name='store',
            field=models.ForeignKey(to='inventory.Store'),
        ),
        migrations.AddField(
            model_name='branduse',
            name='publisher',
            field=models.ForeignKey(to='inventory.Publisher'),
        ),
        migrations.AddField(
            model_name='brandgroup',
            name='parent',
            field=models.ForeignKey(null=True, to='inventory.Publisher'),
        ),
        migrations.AddField(
            model_name='brandemblemgroup',
            name='brandgroup',
            field=models.ForeignKey(null=True, to='inventory.BrandGroup'),
        ),
        migrations.AddField(
            model_name='brand',
            name='group',
            field=models.ManyToManyField(blank=True, db_table='gcd_brand_emblem_group', to='inventory.BrandGroup'),
        ),
        migrations.AddField(
            model_name='brand',
            name='images',
            field=models.ManyToManyField(to='inventory.Image'),
        ),
        migrations.AddField(
            model_name='brand',
            name='parent',
            field=models.ForeignKey(null=True, to='inventory.Publisher'),
        ),
    ]
